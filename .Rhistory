unitTest(matherM)
unitTest <- function(camp){
result <- matrix(NA, 2, 4)
colnames(result) <- c("ADF", "KPSS", "PP", "ADF2")
a <- unitrootTest(camp$occupancy, lags=12, type=c("c"))
result[1,1] <- round(a@test$statistic, 3)
result[2,1] <- round(a@test$p.value[1], 3)
a <-  tseries::kpss.test(camp$occupancy, null="Level", lshort=FALSE)
result[1,2] <- round(a$statistic, 3)
result[2,2] <- round(a$p.value, 3)
a <- tseries::pp.test(camp$occupancy, alternative="stationary", lshort=TRUE)
result[1,3] <- round(a$statistic, 3)
result[2,3] <- round(a$p.value, 3)
a <- adfTest(camp$occupancy, lags=12, type=c("c"))
result[1,4] <- round(a@test$statistic, 3)
result[2,4] <- round(a@test$p.value[1], 3)
return(result)
}
unitTest(matherM)
a <-  tseries::kpss.test(matherM$occupancy, null="Level", lshort=FALSE)
a$statistic
a$p.value
a <- tseries::pp.test(matherM$occupancy, alternative="stationary", lshort=TRUE)
a$statistic
a$p.value
a <- tseries::pp.test(matherM$occupancy, alternative="stationary", type="Z(t_alpha)",lshort=TRUE)
a$p.value
a$statistic
unitTest <- function(camp){
result <- matrix(NA, 2, 3)
colnames(result) <- c("ADF", "KPSS", "ADF2")
a <- unitrootTest(camp$occupancy, lags=12, type=c("c"))
result[1,1] <- round(a@test$statistic, 3)
result[2,1] <- round(a@test$p.value[1], 3)
a <-  tseries::kpss.test(camp$occupancy, null="Level", lshort=FALSE)
result[1,2] <- round(a$statistic, 3)
result[2,2] <- round(a$p.value, 3)
a <- adfTest(camp$occupancy, lags=12, type=c("c"))
result[1,3] <- round(a@test$statistic, 3)
result[2,3] <- round(a@test$p.value[1], 3)
return(result)
}
unitTest <- function(camp){
result <- matrix(NA, 2, 3)
colnames(result) <- c("ADF", "KPSS", "ADF2")
a <- unitrootTest(camp$occupancy, lags=12, type=c("c"))
result[1,1] <- round(a@test$statistic, 3)
result[2,1] <- round(a@test$p.value[1], 3)
a <-  tseries::kpss.test(camp$occupancy, null="Level", lshort=FALSE)
result[1,2] <- round(a$statistic, 3)
result[2,2] <- round(a$p.value, 3)
a <- adfTest(camp$occupancy, lags=12, type=c("c"))
result[1,3] <- round(a@test$statistic, 3)
result[2,3] <- round(a@test$p.value[1], 3)
return(result)
}
unitTest(matherM)
unitTest(elkmontM)
unitTest(meadowsM)
unitTest(moraineM)
unitTest(upperM)
unitTest <- function(camp){
result <- matrix(NA, 2, 3)
colnames(result) <- c("ADF", "ADF2", "KPSS")
a <- unitrootTest(camp$occupancy, lags=12, type=c("c"))
result[1,1] <- round(a@test$statistic, 3)
result[2,1] <- round(a@test$p.value[1], 3)
a <- adfTest(camp$occupancy, lags=12, type=c("c"))
result[1,2] <- round(a@test$statistic, 3)
result[2,2] <- round(a@test$p.value[1], 3)
a <-  tseries::kpss.test(camp$occupancy, null="Level", lshort=FALSE)
result[1,3] <- round(a$statistic, 3)
result[2,3] <- round(a$p.value, 3)
return(result)
}
unitTest(matherM)
unitTest(elkmontM)
unitTest(meadowsM)
unitTest(moraineM)
unitTest(upperM)
ocsb.test(matherM$occupancy, lag.method = c("fixed", "AIC", "BIC", "AICc"), maxlag = 12)
ocsb.test(matherM$occupancy, lag.method = c("AIC"), maxlag = 12)
occupancy <- ts(matherM$occupancy)
ocsb.test(occupancy, lag.method = c("fixed", "AIC", "BIC", "AICc"), maxlag = 12)
occupancy <- ts(matherM$occupancy, frequency = 12)
ocsb.test(occupancy, lag.method = c("fixed", "AIC", "BIC", "AICc"), maxlag = 12)
unitTest <- function(camp){
occupancy <- ts(camp$occupancy, frequency = 12)
result <- matrix(NA, 2, 4)
colnames(result) <- c("ADF", "ADF2", "KPSS", "OCSB")
a <- unitrootTest(occupancy, lags=12, type=c("c"))
result[1,1] <- round(a@test$statistic, 3)
result[2,1] <- round(a@test$p.value[1], 3)
a <- adfTest(occupancy, lags=12, type=c("c"))
result[1,2] <- round(a@test$statistic, 3)
result[2,2] <- round(a@test$p.value[1], 3)
a <-  tseries::kpss.test(occupancy, null="Level", lshort=FALSE)
result[1,3] <- round(a$statistic, 3)
result[2,3] <- round(a$p.value, 3)
a <- ocsb.test(occupancy, lag.method = c("fixed", "AIC", "BIC", "AICc"), maxlag = 12)
result[1,4] <- round(a$statistic, 3)
result[2,4] <- round(a$p.value, 3)
return(result)
}
unitTest(matherM)
a <- ocsb.test(occupancy, lag.method = c("fixed", "AIC", "BIC", "AICc"), maxlag = 12)
a$statistics
a$fitted.model$coefficients
summary(a)
a$pvalues
a
a <- ocsb.test(occupancy, lag.method = c("AIC", "BIC", "AICc"), maxlag = 12)
a <- ocsb.test(occupancy, lag.method = c("AIC", "BIC", "AICc"))
a <- ocsb.test(occupancy, lag.method = "AIC")
a$statistics
a
forecast:::OCSBtest
nsdiffs(occupancy, 12,test="ocsb")
nsdiffs(occupancy, 12,test="ch")
CH.test(occupancy)
uroot::ch.test(occupancy)
source('~/GitHub/RIDB/unitTest.R', echo=TRUE)
unitTest(matherM)
nsdiffs(tsp1, 12,test="ocsb")
nsdiffs(occupancy, 12,test="ocsb")
a <- uroot::ch.test(occupancy)
a
summary(a)
a$statistics
a$pvalues
unitTest <- function(camp){
occupancy <- ts(camp$occupancy, frequency = 12)
result <- matrix(NA, 2, 5)
colnames(result) <- c("ADF", "ADF2", "KPSS", "OCSB", "CH")
a <- unitrootTest(occupancy, lags=12, type=c("c"))
result[1,1] <- round(a@test$statistic, 3)
result[2,1] <- round(a@test$p.value[1], 3)
a <- adfTest(occupancy, lags=12, type=c("c"))
result[1,2] <- round(a@test$statistic, 3)
result[2,2] <- round(a@test$p.value[1], 3)
a <-  tseries::kpss.test(occupancy, null="Level", lshort=FALSE)
result[1,3] <- round(a$statistic, 3)
result[2,3] <- round(a$p.value, 3)
a <- ocsb.test(occupancy, lag.method = c("fixed"), maxlag = 12)
result[1,4] <- round(a$statistic, 3)
a <- uroot::ch.test(occupancy)
result[1,5] <- round(a$statistic[13], 3)
result[2,5] <- round(a$pvalues[13], 3)
return(result)
}
unitTest(matherM)
unitTest(matherM)
unitTest(elkmontM)
unitTest(meadowsM)
unitTest(moraineM)
unitTest(upperM)
acf2(matherM$occupancy, main="ACF for 2007-2017")
#ma_monthly(matherM, 3)
matherM$month <- as.Date(matherM$month, "%Y-%m-%d")
matherM$year <- year(matherM$month)
occupancy <- ts(matherM$occupancy, frequency = 12, start = c(2007, 3))
Window <- window(occupancy, start=c(2016,1))
occupancy <- ts(matherM$occupancy, frequency = 12, start = c(2007, 3))
acf2(matherM$occupancy, main="ACF for 2007-2017")
matherM$month
occupancy <- ts(matherM$occupancy, frequency = 12, start = c(2007, 3))
occupancy
occupancy <- ts(matherM$occupancy, frequency = 12, start = c(2007, 3), end = c(2017, 12))
occupancy
Window <- window(occupancy, start=c(2016,1))
accuracy(ma(occupancy, 3),occupancy)
fitted <- ma(occupancy, 3)
e <- abs((occupancy-fitted)/occupancy) * 100
e <- e[!is.na(e)]
e <- e[e!=Inf]
mean(e)
acf2(matherM$occupancy, main="ACF for 2007-2017")
#ma_monthly(matherM, 3)
matherM$month <- as.Date(matherM$month, "%Y-%m-%d")
matherM$year <- year(matherM$month)
occupancy <- ts(matherM$occupancy, frequency = 12, start = c(2007, 3), end = c(2017, 12))
Window <- window(occupancy, start=c(2016,1))
accuracy(ma(occupancy, 3),occupancy)
fitted <- ma(occupancy, 3)
e <- abs((occupancy-fitted)/occupancy) * 100
e <- e[!is.na(e)]
e <- e[e!=Inf]
mean(e)
MA <- ma(Window, 3)
pd<-funggcast(y,yfor)
acf2(matherM$occupancy, main="ACF for 2007-2017")
#ma_monthly(matherM, 3)
matherM$month <- as.Date(matherM$month, "%Y-%m-%d")
matherM$year <- year(matherM$month)
occupancy <- ts(matherM$occupancy, frequency = 12, start = c(2007, 3), end = c(2017, 12))
Window <- window(occupancy, start=c(2016,1))
accuracy(ma(occupancy, 3),occupancy)
fitted <- ma(occupancy, 3)
e <- abs((occupancy-fitted)/occupancy) * 100
e <- e[!is.na(e)]
e <- e[e!=Inf]
mean(e)
MA <- ma(Window, 3)
ggplot(matherM, aes(month, occupancy, color = "Data")) +
geom_line(stat="identity") +
geom_line(data=MA, aes()) +
scale_x_date(labels = date_format("%b/%y")) +
scale_fill_gradient(breaks=unique(matherM$year))
ggplot(matherM, aes(month, occupancy, color = "Data", group=1)) +
geom_line(stat="identity") +
geom_line(data=MA, aes()) +
scale_x_date(labels = date_format("%b/%y")) +
scale_fill_gradient(breaks=unique(matherM$year))
ggplot(matherM, aes(date, avgfee)) + geom_line() + scale_x_date(format = "%Y-%m-%d")
a <- autoplot(occupancy, type = "obs", mapping = aes(color="Data", linetype="Data")) +
autolayer(ma(Window,3), PI=FALSE) +
xlab("") + ylab("Occupancy (%)")  +
scale_color_manual(
name = "Data",
values = c(Data = "dimgrey", MA = "firebrick")) +
scale_linetype_manual(
name = "Data",
values = c(Data = "dashed", MA = "solid")) +
scale_y_continuous(breaks=seq(0,100,25))  +
ggtitle("Mather Campground") +
theme(panel.background = element_blank())
a
occupancy <- ts(matherM$occupancy, frequency = 12, start = c(2007, 3), end = c(2017, 12))
a <- autoplot(occupancy, type = "obs", mapping = aes(color="Data", linetype="Data")) +
autolayer(ma(Window,3), PI=FALSE) +
xlab("") + ylab("Occupancy (%)")  +
scale_color_manual(
name = "Data",
values = c(Data = "dimgrey", MA = "firebrick")) +
scale_linetype_manual(
name = "Data",
values = c(Data = "dashed", MA = "solid")) +
scale_y_continuous(breaks=seq(0,100,25))  +
ggtitle("Mather Campground") +
theme(panel.background = element_blank())
a
acf2(elkmontM$occupancy, main="ACF for 2007-2017")
#ma_monthly(elkmontM, 3)
occupancy <- ts(elkmontM$occupancy, frequency = 12, start = c(2007, 3))
Window <- window(occupancy, start=c(2016,1))
#variables <- colnames(matherM)[5]
#arima_monthly(matherM)
#arima_monthly(elkmontM)
occupancy <- ts(matherM$occupancy, frequency = 12, start = c(2007, 3))
train <- window(occupancy, end=c(2017,2))
h <- length(occupancy) - length(train)
arimafit <- auto.arima(train, lambda="auto", max.P=0, max.Q=0, seasonal = FALSE, trace = FALSE,
test = "adf",
approximation= FALSE,
allowmean = TRUE,
allowdrift = TRUE)
ARIMA <- forecast(arimafit, h=h)
# Fit MLP
mlp.fit <- mlp(ts(elkmontM$occupancy), m=12, lags=12, outplot = TRUE)
jpeg('avgOccu_NN.jpg')
plot(mlp.fit)
dev.off()
print(mlp.fit)
occupancy <- ts(matherM$occupancy, frequency = 12, start = c(2007, 3))
train <- window(occupancy, end=c(2015,12))
h <- length(occupancy) - length(train)
fit <- nnetar(train, lambda = "auto", repeats = 100)
autoplot(forecast(fit, h=h))
View(matherM)
matherM$month <- as.Date(matherM$month, "%Y-%m-%d")
matherM$year <- year(matherM$month)
occupancy <- ts(matherM$occupancy, frequency = 12, start = c(2007, 3), end = c(2017, 12))
window1 <- window(occupancy, start=c(2017,11))
window2 <- window(occupancy, start=c(2017,9))
window3 <- window(occupancy, start=c(2017,6))
window4 <- window(occupancy, start=c(2016,12))
MA <- ma(window, 3)
MA <- ma(window1, 3)
MA <- ma(window2, 3)
accuracy(ma(window2, 3),occupancy)
ggplot(matherM, aes(month, occupancy, color = "Data")) +
geom_line(stat="identity") +
geom_line(data=MA, aes()) +
scale_x_date(labels = date_format("%b/%y")) +
scale_fill_gradient(breaks=unique(matherM$year))
ggplot(matherM, aes(month, occupancy)) +
geom_line(stat="identity") +
geom_line(data=MA, aes()) +
scale_x_date(labels = date_format("%b/%y")) +
scale_fill_gradient(breaks=unique(matherM$year))
ggplot(matherM, aes(month, occupancy, color = "Data")) +
geom_line() +
geom_line(data=MA, aes()) +
scale_x_date(labels = date_format("%b/%y")) +
scale_fill_gradient(breaks=unique(matherM$year))
ggplot(matherM, aes(month, occupancy, color = "Data")) +
geom_line() +
geom_line(data=MA, aes(month, occupancy, color = "MA")) +
scale_x_date(labels = date_format("%b/%y")) +
scale_fill_gradient(breaks=unique(matherM$year))
ggplot(matherM, aes(month, occupancy, color = "Data")) +
geom_line() +
geom_line(data=MA, aes(month, occupancy, color = "MA")) +
scale_x_date(labels = date_format("%b/%y"))
a <- autoplot(occupancy, type = "obs", mapping = aes(color="Data", linetype="Data")) +
autolayer(ma(Window,3), PI=FALSE) +
xlab("") + ylab("Occupancy (%)")  +
scale_color_manual(
name = "Data",
values = c(Data = "dimgrey", MA = "firebrick")) +
scale_linetype_manual(
name = "Data",
values = c(Data = "dashed", MA = "solid")) +
scale_y_continuous(breaks=seq(0,100,25))  +
ggtitle("Mather Campground") +
theme(panel.background = element_blank())
a
a <- autoplot(occupancy, type = "obs", mapping = aes(color="Data", linetype="Data")) +
autolayer(ma(window3,3), PI=FALSE) +
xlab("") + ylab("Occupancy (%)")  +
scale_color_manual(
name = "Data",
values = c(Data = "dimgrey", MA = "firebrick")) +
scale_linetype_manual(
name = "Data",
values = c(Data = "dashed", MA = "solid")) +
scale_y_continuous(breaks=seq(0,100,25))  +
ggtitle("Mather Campground") +
theme(panel.background = element_blank())
a
occupancy <- ts(matherM$occupancy, frequency = 12, start = c(2007, 3), end = c(2017, 12))
train <- window(occupancy, end=c(2015,12))
h <- length(occupancy) - length(train)
arf <- arfima(train, order = c(4,0,1), numeach = c(3,3))
occupancy <- ts(elkmontM$occupancy, frequency = 12, start = c(2007, 3))
train <- window(occupancy, end=c(2015,12))
h <- length(occupancy) - length(train)
NNAR <- forecast(nnetar(train), h=h)
occupancy <- ts(elkmontM$occupancy, frequency = 12, start = c(2007, 3), end = c(2017, 12))
train <- window(occupancy, end=c(2015,12))
h <- length(occupancy) - length(train)
NNAR <- forecast(nnetar(train), h=h)
nn <- nnetar(train)
NNAR <- forecast(nn, h=h)
NNAR <- forecast(nn, h=24)
NNAR <- forecast(nn)
n_date <- unique(matherM[, month])
period <- 48
period <- 12
theme_ts <- theme(panel.border = element_rect(fill = NA,
colour = "grey10"),
panel.background = element_blank(),
panel.grid.minor = element_line(colour = "grey85"),
panel.grid.major = element_line(colour = "grey85"),
panel.grid.major.x = element_line(colour = "grey85"),
axis.text = element_text(size = 13, face = "bold"),
axis.title = element_text(size = 15, face = "bold"),
plot.title = element_text(size = 16, face = "bold"),
strip.text = element_text(size = 16, face = "bold"),
strip.background = element_rect(colour = "black"),
legend.text = element_text(size = 15),
legend.title = element_text(size = 16, face = "bold"),
legend.background = element_rect(fill = "white"),
legend.key = element_rect(fill = "white"))
data_train <- matherM[date %in% n_date[1:105]]
data_test <- matherM[date %in% n_date[106]]
ggplot(data_train, aes(date_time, value)) +
geom_line() +
labs(x = "Date", y = "Load (kW)") +
theme_ts
data_train <- matherM[month %in% n_date[1:105]]
data_test <- matherM[month %in% n_date[106]]
ggplot(data_train, aes(month, occupancy)) +
geom_line() +
labs(x = "Date", y = "Load (kW)") +
theme_ts
formatCamp <- function(ID){
n=ID
name <- data[data$id==n & as.Date(data$date, format="%Y-%m-%d")<"2018-01-01",]
name$date <- as.Date(name$date, format = "%Y-%m-%d")
min <- as.Date(min(name$date))
max <- as.Date(max(name$date))
name1 <- name %>%
complete(date = seq(min, max, by="day")) %>%
mutate(Campground = na.locf(Campground, na.rm=FALSE)) %>%
mutate(Park = na.locf(Park, na.rm=FALSE)) %>%
mutate(id = na.locf(id, na.rm=FALSE)) %>%
mutate(occupancy = replace_na(occupancy, 0)) %>%
mutate(avgfee = replace_na(avgfee, 0)) %>%
mutate(aggPaid = replace_na(aggPaid, 0)) %>%
mutate(avgPaid = replace_na(avgPaid, 0)) %>%
mutate(avgNumberOfPeople = replace_na(avgNumberOfPeople, 0)) %>%
mutate(totalNumberOfPeople = replace_na(totalNumberOfPeople, 0)) %>%
mutate(avgdateDiff = replace_na(avgdateDiff, 0)) %>%
mutate(avglengthStay = replace_na(avglengthStay, 0)) %>%
mutate(numOfSites = na.locf(numOfSites, na.rm=FALSE)) %>%
mutate(recGovNumOfSites = na.locf(recGovNumOfSites, na.rm=FALSE)) %>%
mutate(occupancy = 100*occupancy) %>%
distinct(date, .keep_all=TRUE)
fwrite(name, paste0("descriptive_", ID, ".csv"))
fwrite(name1, paste0("campground_", ID, ".csv"))
name$month <- format(as.Date(name$date, format = "%Y-%m-%d"), "%Y-%m")
nameM <- name %>%
group_by(month) %>%
mutate(totalNumberOfPeople = sum(totalNumberOfPeople)) %>%
mutate(avgNumberOfPeople = mean(avgNumberOfPeople)) %>%
mutate(occupancy = mean(occupancy)) %>%
mutate(avgPaid = sum(avgPaid)) %>%
mutate(avgfee = mean(avgfee)) %>%
mutate(avglengthStay = mean(avglengthStay)) %>%
mutate(avgdateDiff = mean(avgdateDiff)) %>%
distinct(month, .keep_all=TRUE)
nameM$month <- as.yearmon(nameM$month, "%Y-%m")
nameM$month <- as.Date(nameM$month)
fwrite(nameM, paste0("campground_monthly_", ID, ".csv"))
}
mather <- fread("campground_65.csv")
matherM <- fread("campground_monthly_65.csv")
formatCamp(65)
summary(mather)
formatCamp <- function(ID){
n=ID
name <- data[data$id==n & as.Date(data$date, format="%Y-%m-%d")<"2018-01-01",]
name$date <- as.Date(name$date, format = "%Y-%m-%d")
min <- as.Date(min(name$date))
max <- as.Date(max(name$date))
fwrite(name, paste0("descriptive_", ID, ".csv"))
name <- name %>%
complete(date = seq(min, max, by="day")) %>%
mutate(Campground = na.locf(Campground, na.rm=FALSE)) %>%
mutate(Park = na.locf(Park, na.rm=FALSE)) %>%
mutate(id = na.locf(id, na.rm=FALSE)) %>%
mutate(occupancy = replace_na(occupancy, 0)) %>%
mutate(avgfee = replace_na(avgfee, 0)) %>%
mutate(aggPaid = replace_na(aggPaid, 0)) %>%
mutate(avgPaid = replace_na(avgPaid, 0)) %>%
mutate(avgNumberOfPeople = replace_na(avgNumberOfPeople, 0)) %>%
mutate(totalNumberOfPeople = replace_na(totalNumberOfPeople, 0)) %>%
mutate(avgdateDiff = replace_na(avgdateDiff, 0)) %>%
mutate(avglengthStay = replace_na(avglengthStay, 0)) %>%
mutate(numOfSites = na.locf(numOfSites, na.rm=FALSE)) %>%
mutate(recGovNumOfSites = na.locf(recGovNumOfSites, na.rm=FALSE)) %>%
mutate(occupancy = 100*occupancy) %>%
distinct(date, .keep_all=TRUE)
fwrite(name, paste0("campground_", ID, ".csv"))
name$month <- format(as.Date(name$date, format = "%Y-%m-%d"), "%Y-%m")
nameM <- name %>%
group_by(month) %>%
mutate(totalNumberOfPeople = sum(totalNumberOfPeople)) %>%
mutate(avgNumberOfPeople = mean(avgNumberOfPeople)) %>%
mutate(occupancy = mean(occupancy)) %>%
mutate(avgPaid = sum(avgPaid)) %>%
mutate(avgfee = mean(avgfee)) %>%
mutate(avglengthStay = mean(avglengthStay)) %>%
mutate(avgdateDiff = mean(avgdateDiff)) %>%
distinct(month, .keep_all=TRUE)
nameM$month <- as.yearmon(nameM$month, "%Y-%m")
nameM$month <- as.Date(nameM$month)
fwrite(nameM, paste0("campground_monthly_", ID, ".csv"))
}
formatCamp(65)
mather <- fread("campground_65.csv")
summary(mather)
formatCamp(42)
elkmont <- fread("campground_42.csv")
summary(elkmont)
View(mather)
unique(data$id[data$Campground=="MATHER CAMPGROUND"]) #65
formatCamp(65)
matherD <- fread("descriptive_65.csv")
mather <- fread("campground_65.csv")
matherM <- fread("campground_monthly_65.csv")
unique(data$id[data$Campground=="MORAINE PARK CAMPGROUND"]) #67
formatCamp(67)
moraineD <- fread("descriptive_67.csv")
moraine <- fread("campground_67.csv")
moraineM <- fread("campground_monthly_67.csv")
unique(data$id[data$Campground=="UPPER PINES"]) #106
formatCamp(106)
upperD <- fread("descriptive_106.csv")
upper <- fread("campground_106.csv")
upperM <- fread("campground_monthly_106.csv")
unique(data$id[data$Campground=="BIG MEADOWS"]) #7
formatCamp(7)
meadowsD <- fread("descriptive_7.csv")
meadows <- fread("campground_7.csv")
meadowsM <- fread("campground_monthly_7.csv")
unique(data$id[data$Campground=="ELKMONT CAMPGROUND"]) #42
formatCamp(42)
elkmontD <- fread("descriptive_42.csv")
elkmont <- fread("campground_42.csv")
elkmontM <- fread("campground_monthly_42.csv")
#unique(data$id[data$Campground=="BLACKWOODS CAMPGROUND"]) #11
#formatCamp(11)
#black <- fread("campground_monthly_11.csv") #weird occupancy
#unique(data$id[data$Campground=="FLAMINGO"]) #45
#formatCamp(45)
#flamingo <- fread("campground_monthly_45.csv") #weird occupancy
n_date <- unique(matherM[, month])
period <- 12
data_train <- matherM[month %in% n_date[1:105]]
data_test <- matherM[month %in% n_date[106]]
ggplot(data_train, aes(month, occupancy)) +
geom_line() +
labs(x = "Date", y = "Load (kW)") +
theme_ts
ggplot(data_train, aes(month, occupancy, group=1)) +
geom_line() +
labs(x = "Date", y = "Load (kW)") +
theme_ts
data_ts <- ts(data_train$occupancy, freq = period * 7)
decomp_ts <- stl(data_ts, s.window = "periodic", robust = TRUE)$time.series
